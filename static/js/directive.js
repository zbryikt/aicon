// Generated by LiveScript 1.2.0
angular.module('utils', []).directive('tags', function($compile){
  return {
    restrict: 'E',
    replace: true,
    scope: {
      "model": '=ngModel',
      name: '@'
    },
    template: "<input type='hidden' class='tags' placeholder='add tags...'>",
    link: function(scope, element, attrs){
      $(element).select2({
        tokenSeparators: [",", " "],
        multiple: true,
        data: [],
        createSearchChoice: function(term, data){
          if (data.filter(function(it){
            return it.text.localeCompare(term) === 0;
          }).length === 0) {
            return {
              id: term,
              text: term
            };
          }
        }
      }).on('change', function(e){
        return scope.$apply(function(){
          return scope.model = $(element).select2('data');
        });
      });
      return scope.$watch('model', function(v){
        return $(element).select2('data', v);
      });
    }
  };
}).directive('license', function($compile){
  return {
    restrict: 'E',
    replace: true,
    scope: {
      "model": '=ngModel',
      name: '@'
    },
    template: "<input type='hidden'>",
    link: function(scope, element, attrs){
      element.select2({
        placeholder: "choose a license",
        minimumInputLength: 0,
        ajax: {
          url: '/license/',
          type: 'GET',
          dataType: 'json',
          quiteMillis: 100,
          data: function(term, page){
            return {
              q: term,
              page_limit: 10,
              page: page
            };
          },
          results: function(d, p){
            return {
              results: d.data,
              more: d.hasNext
            };
          }
        },
        initSelection: function(){},
        formatResult: function(it){
          return (it.fields && "<div>" + it.pk + ". " + (it.fields && it.fields['name']) + "</div>") || "";
        },
        formatSelection: function(it){
          return (it.fields && "<div>" + it.pk + ". " + it.fields['name'] + "</div>") || "";
        },
        formatNoMatches: function(){
          return '找不到這個項目';
        },
        formatSearching: function(){
          return '搜尋中';
        },
        formatInputTooShort: function(){
          return '請多打幾個字';
        },
        id: function(e){
          return e.fields && e.pk + "" || "";
        },
        escapeMarkup: function(it){
          return it;
        }
      }).on('change', function(e){
        return scope.$apply(function(){
          return scope.model = $(element).select2('data');
        });
      });
      return scope.$watch('model', function(v){
        return $(element).select2('data', v);
      });
    }
  };
}).directive('icon', function($compile){
  return {
    restrict: 'E',
    replace: true,
    scope: {
      "src": "@",
      "del": "&",
      "class": "@"
    },
    template: "<div class='svg-icon {{class}}'><div class='object'></div><div class='mask'></div>" + "<div class='delete' ng-click='$event.stopPropagation();del({e: $event})'>" + "<i class='glyphicon glyphicon-minus-sign'></i></div></div>",
    link: function(scope, element, attrs){
      if (!attrs.del) {
        element.find('.delete').remove();
      }
      element.on('mouseover', function(e){
        var p, x$, n;
        p = element.offset();
        x$ = n = $('#icon-hint');
        x$.show();
        x$.css({
          top: (p.top - n.outerHeight()) + "px",
          left: (element.width() / 2 + p.left - n.outerWidth() / 2) + "px"
        });
        return x$;
      });
      return attrs.$observe('src', function(v){
        if (v) {
          return element.find('.object').replaceWith("<iframe class='object' src='/m/" + v + "'></iframe>");
        } else {
          return element.find('.object').replaceWith("<div class='object'>no data</div>");
        }
      });
    }
  };
});